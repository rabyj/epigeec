name: Build Wheels

on:
  pull_request:
    paths:
      - 'third_party/**'  # Third-party code changes
      - 'epigeec/cc/**'  # C/C++ extension changes
      - 'pyproject.toml'  # Potential build config changes
      - '.github/workflows/build-wheels.yml'  # Workflow changes
  release:
    types: [published]
  push:
    tags:
      - 'test-*'  # Only trigger on test tags
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Continue building other platforms if one fails
      matrix:
        os: [ubuntu-latest, macos-14]  # cross-compile on macOS for both architectures, see pyproject.toml

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.0
        # no 'env': Reads config from pyproject.toml automatically

      - uses: actions/upload-artifact@v4
        if: env.GITHUB_ACTIONS == 'true'  # Only upload when running in GitHub Actions
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish_testpypi:
    name: Publish to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/test-pypi')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/epigeec
    permissions:
      id-token: write  # For trusted publishing

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_pypi:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/epigeec
    permissions:
      id-token: write  # For trusted publishing

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
